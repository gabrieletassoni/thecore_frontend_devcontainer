version: "3.7"

# networks:
#     default:
#       external:
#         name: development

x-common-vars: &commmon-vars
    RAILS_ENV: "${RAILS_ENV:-production}"
    RACK_ENV: "${RACK_ENV:-production}"
    RAILS_LOG_TO_STDOUT: "${RAILS_LOG_TO_STDOUT:-true}"
    LANG: "${LANG:-en_US.UTF-8}"
    RAILS_SERVE_STATIC_FILES: "${RAILS_SERVE_STATIC_FILES:-true}"
    RAILS_RELATIVE_URL_ROOT: "${RAILS_RELATIVE_URL_ROOT:-/}"
    SECRET_KEY_BASE: "${SECRET_KEY_BASE:-dh37rbf4c7clbry320b4y3t854y9tc4938nyrnl9}"
    DATABASE_URL: "${DATABASE_URL:-postgres://postgres:postgres@db/postgres?pool=5}"
    REDIS_URL: "${REDIS_URL:-redis://redis}"
    SMTP_DELIVERY_METHOD: "${SMTP_DELIVERY_METHOD:-smtp}"
    SMTP_ADDRESS: "${SMTP_ADDRESS:-changeme@example.com}"
    SMTP_USERNAME: "${SMTP_USERNAME:-changeme@example.com}"
    SMTP_PASSWORD: "${SMTP_PASSWORD:-changeme}"
    IMAGE_TAG_BACKEND: "${IMAGE_TAG_BACKEND}"
    COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"

services:
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck: 
      interval: 1s
      retries: 30
      test: "pg_isready -U postgres"
      timeout: 3s

  redis:
    image: redis:latest
    entrypoint: "redis-server --appendonly yes"
    restart: unless-stopped
    healthcheck: 
      interval: 1s
      retries: 30
      test: "redis-cli ping"
      timeout: 3s

  backend:
    image: backenddev_backend:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
    - db
    - redis
    entrypoint: /bin/thecore/entrypoint.sh
    environment: 
        <<: *commmon-vars
    healthcheck:
        test: "${DOCKER_HEALTHCHECK_TEST:-curl --fail http://localhost:3000/}"
        interval: "60s"
        timeout: "3s"
        retries: 3

  backend-sidekiq:
    image: backenddev_backend:latest
    restart: unless-stopped
    depends_on:
    - db
    - redis
    - backend
    entrypoint: /bin/thecore/entrypoint-sidekiq.sh
    environment: 
        <<: *commmon-vars
    healthcheck:
        test: "${DOCKER_HEALTHCHECK_TEST:-sidekiqmon|grep $(hostname)}"
        interval: "60s"
        timeout: "3s"
        retries: 3
